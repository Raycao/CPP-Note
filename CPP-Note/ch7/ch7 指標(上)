ch7 指標: 

指標與記憶體位址:

當你宣告了一個變數
例: int i = 6;

6代表變數本身的值，相當於儲存於記憶體中的某個數值
這種數值稱為rvalue或readvalue

而變數的位址則是指該變數所分配到的記憶體之位置
此數值又稱為lvalue或location value


若想知道變數的記憶體位只為何
可以使用&運算子，&是取址運算子(Address-of operator)
透過取址運算子，可以取出變數的記憶體位址
範例: lvalue.cpp


記憶體位址的表示採用16進位表示法，例:0x22ff74
int所佔用的記憶體大小是四個位元組
因此從0x22ff74往後算4個位元組都是配置給我們這個變數的記憶體空間


根據範例，我們可以直接存取變數，所以可以直接對分配到的記憶體空間做存取
我們也可以使用指標(Pointer)，Pointer提供了間接性的操作
指標會址向特定的記憶體位址，但不會直接操作變數或物件
宣告方式如下: type *ptr;
由於指標指向記憶體位址，你可以用&(取址運算子)來將位址指定給指標

指標擁有兩種操作特性
1. 操作指標所儲存的位址
2. 操作指標指向的位址的資料
你可以用*(提取運算子 Dereference)來提取指標所指向位址的資料
範例: pointerEx.cpp


我們也可以將值指定給指標所指向的記憶體位址
因此該記憶體位址內的資料也會改變
範例: pointerEx2.cpp


如果宣告了指標，但是沒有指定指向位址
這樣就是指向位址不明，如果這時候存取未知記憶體的內容是很危險的，例:
int *ptr; 
*ptr = 10;

這樣會造成不可預知的錯誤
若不確定指向位址，最好的方式是替指標設定初值，例:
int *ptt = 0;

指標的宣告方式，以下兩種都是可以的:
int *ptr1; 
int* ptr2;


但如此例:  int* ptr1, ptr2;
其實只有ptr1是指標，ptr2並不是
因此使用讓*靠在關鍵字上有可能會造成誤會
建議還是這樣寫: int *ptr1, *ptr2;
比較不會混淆造成問題


如果只是想單純持有位址資訊，對於型態沒有特別關心
你也可以這樣定義: void *ptr;
但是這樣的話，不能使用*來取得指向內容
需使用reinterpret_cast作轉型動作至對應的型態
範例: voidPTR.cpp

也可以使用舊的方法做轉型，例如下:
int var = 10; 
void *vptr = &var ; 
// 轉型為int型態指標並指定給iptr 
int *iptr = (int*)(vptr);


const的變數，無法更改值，你也無法用一般指標取值
所以就必須用到特別的指標，使用const型態的指標，例如下:
const int var = 10;
const int *vptr = &var;
因為指標也變成了指標常數，所以也沒辦法再指定新值
某些情況下，你可能會想改變唯讀區域的值，你可以使用const_cast
範例: constPTR.cpp
當然這邊也可以用舊風格轉型，例: int* v = (int*) (p); 


指標的運算: 
先看範例: ptrPlus.cpp
指標的加減會隨著定義的指標型態前進或退後n個位元組
例如: int指標，就是四個位元組


指標與陣列:
在宣告一個陣列之後，陣列名稱用來參考至陣列的第一個元素的記憶體位址
範例: ptrArray.cpp
陣列的索引位移，其實就是相對於第一個記憶體位址的位移量
範例: ptrArray2.cpp，可以看出個索引的位址
使用指標取出陣列內容，範例: pttArray3.cpp



new 運算子與 delete 運算子:
確定要使用的變數之前，我們會做宣告
也因此變數會被自動配置記憶體空間。

但因為不確定何時會被用到，你會希望再使用到的時候再配置記憶體空間
不使用就歸還記憶體空間，所以我們就可以用new跟delete關鍵字
先看範例: ptrNew.cpp

使用new運算子動態配置的空間，在整個程式結束前並不會自動歸還給記憶體
您必須使用delete將這個空間還給記憶體
沒有適當的使用delete的話，由於空間一直沒有歸還，最後將導致整個記憶體空間用盡


陣列的大小必須事先決定好，然而有時候您無法知道我們會使用多大的陣列
這問題也可以使用動態記憶體與指標運算來解決
陣列動態配置如此例: int *arr = new int[1000];
配置了1000個int大小的空間，但沒有宣告初值
目前沒有方法可以動態配置陣列又同時宣告元素初值
同樣地，在沒有使用的時候就用delete來歸還記憶體
例: delete [] arr;
加上[]是表示歸還的是整個陣列空間
範例: ptrNewArray.cpp
二維陣列也可以用指標來達成目的，範例: ptrNewArray2.cpp

